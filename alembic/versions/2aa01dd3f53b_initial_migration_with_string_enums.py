"""initial_migration_with_string_enums

Revision ID: 2aa01dd3f53b
Revises: 
Create Date: 2025-05-28 10:42:52.719580

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2aa01dd3f53b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('linuxdo_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('trust_level', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_silenced', sa.Boolean(), nullable=True),
    sa.Column('is_globally_blacklisted', sa.Boolean(), nullable=True),
    sa.Column('advanced_mode_agreed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_linuxdo_id'), 'users', ['linuxdo_id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('benefits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('benefit_type', sa.String(length=10), nullable=True),
    sa.Column('visibility', sa.String(length=10), nullable=True),
    sa.Column('access_password', sa.String(length=255), nullable=True),
    sa.Column('mode', sa.String(length=10), nullable=True),
    sa.Column('min_trust_level', sa.Integer(), nullable=True),
    sa.Column('min_likes_given', sa.Integer(), nullable=True),
    sa.Column('min_likes_received', sa.Integer(), nullable=True),
    sa.Column('min_topics_entered', sa.Integer(), nullable=True),
    sa.Column('min_posts_read', sa.Integer(), nullable=True),
    sa.Column('min_days_visited', sa.Integer(), nullable=True),
    sa.Column('min_topic_count', sa.Integer(), nullable=True),
    sa.Column('min_post_count', sa.Integer(), nullable=True),
    sa.Column('min_time_read', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('total_claims', sa.Integer(), nullable=True),
    sa.Column('max_claims', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_benefits_id'), 'benefits', ['id'], unique=False)
    op.create_table('global_blacklists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_global_blacklists_id'), 'global_blacklists', ['id'], unique=False)
    op.create_table('personal_blacklists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('blacklisted_user_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['blacklisted_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_personal_blacklists_id'), 'personal_blacklists', ['id'], unique=False)
    op.create_table('benefit_cdkeys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('benefit_id', sa.Integer(), nullable=False),
    sa.Column('cdkey_content', sa.Text(), nullable=False),
    sa.Column('is_claimed', sa.Boolean(), nullable=True),
    sa.Column('claimed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('claimed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['benefit_id'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['claimed_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_benefit_cdkeys_id'), 'benefit_cdkeys', ['id'], unique=False)
    op.create_table('benefit_claims',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('benefit_id', sa.Integer(), nullable=False),
    sa.Column('cdkey_id', sa.Integer(), nullable=True),
    sa.Column('snapshot_data', sa.Text(), nullable=True),
    sa.Column('claimed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['benefit_id'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['cdkey_id'], ['benefit_cdkeys.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_benefit_claims_id'), 'benefit_claims', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_benefit_claims_id'), table_name='benefit_claims')
    op.drop_table('benefit_claims')
    op.drop_index(op.f('ix_benefit_cdkeys_id'), table_name='benefit_cdkeys')
    op.drop_table('benefit_cdkeys')
    op.drop_index(op.f('ix_personal_blacklists_id'), table_name='personal_blacklists')
    op.drop_table('personal_blacklists')
    op.drop_index(op.f('ix_global_blacklists_id'), table_name='global_blacklists')
    op.drop_table('global_blacklists')
    op.drop_index(op.f('ix_benefits_id'), table_name='benefits')
    op.drop_table('benefits')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_linuxdo_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
